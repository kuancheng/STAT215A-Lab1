1+1
x = c(1,2,3,4)
length(x)
install.packages(c("ggplot2", "dplyr", "reshape2", "data.table"))
getwd
getwd()
setwd("~/Desktop/lab1/data/")
log = read.csv("sonoma-data-log.csv")
head(log)
summary(log)
dim(log)
log[,1]
log[,4]
head(log[,4])
head(log[,5])
llibrary(ggplot2)
library(ggplot2)
hist(log[, 4])
hist(log[, 5])
hist(log[, 6])
hist(log[, 10])
plot(log[, 5])
head(log[,5])
View(log[1:100, 1:8])
dim(log)
View(log[1:100, 2:11])
group_by(log, nodeid) %* summarize(n())
group_by(log, nodeid) %*% summarize(n())
library((dplyr))
library((dplyr)
library(dplyr)
group_by(log, nodeid) %*% summarize(n())
library(ggplot2)
library(dplyr)
library(reshape2)
library(data.table)
# Load the data.
setwd('../data/')
log <- read.csv('sonoma-data-log.csv',header=T)
net <- read.csv('sonoma-data-net.csv',header=T)
all <- read.csv('sonoma-data-all.csv', header=T)
locs <- read.table('mote-location-data.txt', header=T)
log.table <- data.table(log)
log.table[, .(avg=mean(humidity)), by=nodeid]
log.table[, .N, by=.(nodeid, epoch)]
patient <- FALSE
if (patient) {
# This takes a long time.
ggplot(log) + geom_point(aes(x=humidity, y=humid_temp))
}
log.indices <- sample(nrow(log), 10000, replace=F)
ggplot(log[log.indices, ]) + geom_point(aes(x=humidity, y=humid_temp))
# hamatop vs hamabot
ggplot(log[log.indices, ]) + geom_point(aes(x=hamatop, y=hamabot))
# hamatop vs temperature, humidity as color.
ggplot(log[log.indices, ]) + geom_point(aes(x=hamatop, y=humid_temp,
color=humidity))
# add transparency
ggplot(log[log.indices, ]) + geom_point(aes(x=hamatop, y=humid_temp,
color=humidity), alpha=1/5)
group_by(log, nodeid) %>% summarize(n())
ggplot(filter(log, nodeid == 105)) + geom_point(aes(x=epoch, y=humid_temp))
Normalize <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
node.melt <- melt(filter(log, nodeid == 105) %>%
select(epoch, voltage, humidity, humid_temp) %>%
mutate(voltage = Normalize(voltage),
humidity = Normalize(humidity),
humid_temp = Normalize(humid_temp)),
id="epoch")
ggplot(node.melt) + geom_point(aes(x=epoch, y=value)) + facet_grid(~ variable)
View(log[1:100, 1:11])
View(log[1:2000, 1:11])
unique(log[, 3])
unique(log[, 2])
unique(log[, 3])
unique(log[, 2])
dim(net)
View(net[1:100, 1:11])
